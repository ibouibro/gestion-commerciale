





<%- include('header') -%>

<div class="main-content">
  <div class="col-lg-12">
   
    <%  if (locals?.message) {  %>
 
        
      <div class="alert alert-success" role="alert">
        <%= message %>
      </div>
    
  <% } %>

 

  <div class="table-data__tool-right" style="margin-bottom:15px;">
   
</div>

<%  if (locals?.commande && locals?.commande.length !=0) { 
  %>
  <p>historique commandes, fournisseur : <%= commande[0].nom_f %>  </p>
  <input type="text" id="searchInput" class="form-control" style="width:300px;margin-bottom:6px;" placeholder="Search ...">
  
    <div class="table-responsive table-responsive-data2" style="width:100%;">
      
        <table class="table table-borderless table-striped table-earning" id="clientTable">
          <thead>
            <tr>
              <th>id</th>
              <th>Date</th>
              <th>état</th>
             
              <th>montant</th>
              <th>Actions</th>
              
            </tr>
          </thead>
          <tbody>
              
          
            <!-- Add more rows as needed -->
          </tbody>
        </table>
        <% }else{  %>
          aucune commande trouvée
          <% } %>

          <div class="pagination-buttons">
            <button onclick="prevPage()">Previous</button>
            <span id="pageNumbers" style="display:flex;flex-direction:row;"></span>
            <button onclick="nextPage()">Next</button>
        </div>

        <script>
          // Data passed from the server-side EJS
          const data = <%- JSON.stringify(commande) %>;
        
          // Pagination variables
          let currentPage = 1;
          const rowsPerPage = 5;
        
          // Function to display table rows for the current page
          function displayTableRows() {
              const tableBody = document.querySelector("#clientTable tbody");
              tableBody.innerHTML = ""; // Clear previous rows
        
              const start = (currentPage - 1) * rowsPerPage;
              const end = start + rowsPerPage;
              const paginatedData = data.slice(start, end);
        
              paginatedData.forEach((row) => {
                  const tr = document.createElement("tr");
                  tr.innerHTML = `<td>${row.id}</td><td> `+ `${row.date} `+ `</td><td>${row.etat}</td><td>${row.montant}</td><td>
                    <div class="table-data-feature">
                   <button class="item"  data-toggle="modal" data-target="#largeModalx${row.id}" data-placement="top" title="afficher">
                       <i class="fa fa-eye"></i>
                   </button></td>`;
                  tableBody.appendChild(tr);
              });
        
              displayPagination();
          }
        
          // Function to display pagination links
          function displayPagination() {
              const pageNumbers = document.getElementById("pageNumbers");
              pageNumbers.innerHTML = ""; // Clear previous pagination links
        
              const totalPages = Math.ceil(data.length / rowsPerPage);
        
              for (let i = 1; i <= totalPages; i++) {
                  const pageLink = document.createElement("a");
                  pageLink.textContent = i;
                  pageLink.href = "#";
                  pageLink.classList.add("page-link");
                  if (i === currentPage) pageLink.classList.add("active");
        
                  pageLink.addEventListener("click", (e) => {
                      e.preventDefault();
                      currentPage = i;
                      displayTableRows();
                  });
        
                  pageNumbers.appendChild(pageLink);
              }
          }
        
          // Function to go to the previous page
          function prevPage() {
              if (currentPage > 1) {
                  currentPage--;
                  displayTableRows();
              }
          }
        
          // Function to go to the next page
          function nextPage() {
              const totalPages = Math.ceil(data.length / rowsPerPage);
              if (currentPage < totalPages) {
                  currentPage++;
                  displayTableRows();
              }
          }
        
          // Initial display
          displayTableRows();
        </script>

    </div>
</div>
</div>

<!-- modal large -->

<% for (var i=0; i< commande.length; i++){
  
  let target = "largeModalx"+commande[i].id; 
  let label = "largeModalLabelx"+commande[i].id;

  %>

  <div class="modal fade" id="<%= target %>" tabindex="-1" role="dialog" aria-labelledby="<%= label %>" aria-hidden="true">
    <div class="modal-dialog modal-md" role="document">
      <div class="modal-content">
        <div class="modal-header">
          <h5 class="modal-title" id="<%= label %>">informations Commande</h5>
          <button type="button" class="close" data-dismiss="modal" aria-label="Close">
            <span aria-hidden="true">&times;</span>
          </button>
      </div>
      

      <div class="modal-body">
   

           <div class="supplier-container">
            <div class="supplier-card">
                <div class="supplier-header">
                    <h2 class="supplier-name">commande: #<%= commande[i].id %></h2>
                </div>
                <div class="supplier-body">
                    <p class="supplier-detail"> Date: <%= commande[i].date %></p>
                    <p class="supplier-detail"> Etat: <%= commande[i].etat %></p>
                    <p class="supplier-detail"> Fournisseur: <%= commande[i].nom %></p>
                    <p class="supplier-detail"> Montant: <%= commande[i].montant %></p>
                    <table class="order-table">
                      <thead>
                          <tr>
                              
                              <th>Quantité</th>
                              <th>Produit</th>
                          </tr>
                      </thead>
                      <tbody>
                        <% for (var j=0; j< pc.length;j++){ 
                         if(pc[j].id_commande == commande[i].id){ %>
                          <tr>
                              
                              <td><%= pc[j].quantite %></td>
                              <td><%= pc[j].nom %></td>
                          </tr>
                          <% }} %>
                      </tbody>
                      </table>
                </div>
            </div>
        </div>
  
           


      </div>
      <div class="modal-footer">
        <button type="button" class="btn btn-secondary" data-dismiss="modal">fermer</button>
       
      </div>
    </div>
  </div>
</div>

<% } %>




<!-- end modal large -->
<%- include('footer') -%>